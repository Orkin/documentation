---
$schema: "/.meta/.schemas/guides.json"
title: Environment variables
description: How to manage environment variables in your projects and applications
series_position: 4
author_github: https://github.com/evoxmusic
tags: ["type: guide", "technology: qovery"]
---
import Steps from '@site/src/components/Steps';

Sometimes you need to pass data to your application. E.g: API key, credentials, debug parameters. For this reason, Qovery allows you to
securely pass your data by using *Environment Variables*.

<Alert type="info">

Do you need to keep secure your environment variable? Use [Secret][docs.using-qovery.configuration.environment-variable] instead of **Environment
Variable**.

</Alert>

Here is a short video to show how to use environment variables.

<div class="video-container">
  <p align="center">
    <iframe src="https://www.loom.com/embed/4a8000605cd842519a32eb96feecda61" width="100%" height="100%" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen>
    </iframe>
  </p>
</div>

## Tutorial

Here is an example on how to pass an environment variable to a NodeJS app.

<Alert type="info">

Steps are similar for Secrets.

</Alert>

Let's first create a new Node.js application that uses environment variables.

<Steps  headingDepth={3}>

<ol>

<li>

### Create an environment variable

Let's say that we pass an environment variable `ENABLE_DEBUG` that turns on the debug info from the app.

Click on the `environment variables` tab inside your app view.

<p align="center">
  <img src="/img/environment_variables.png" alt="List environment variables" />
</p>

Click on "create", and then add the `ENABLE_DEBUG` variable with a boolean value.

<p align="center">
  <img src="/img/create_environment_variable.png" alt="Create environment variable" />
</p>

</li>

<li>

### Use the environment variable in the app

Create `app.js` file - a simple Node.js HTTP server application:

```javascript title="app.js" {6-10}
const http = require('http');

const hostname = '0.0.0.0';
const port = 3333;

const enableDebug = process.env.ENABLE_DEBUG

if (enableDebug) {
  console.log("debug mode enabled");
}

const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end("hello world");
});

server.listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});
```

As you can see, to get access to your environment variable you just need to use process.env.`ENABLE_DEBUG`. Environment variables are
injected at the build and run time.

</li>

</ol>

</Steps>

This guide was an introduction on how to use the Environment Variables. To know more
about [Environment Variables][docs.using-qovery.configuration.environment-variable] and [Secrets][docs.using-qovery.configuration.environment-variable],
go to our [detailed documentation][docs.using-qovery.configuration].

<Alert type="info">

Do you want to bulk import your Environment Variables? [Check out this tutorial][guides.tutorial.import-your-environment-variables-with-the-qovery-cli]

</Alert>
